// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Parser1.EF;

#nullable disable

namespace Parser1.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20221021134533_OrganisationIdAddedToScientist")]
    partial class OrganisationIdAddedToScientist
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Parser1.Models.Direction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Directions");
                });

            modelBuilder.Entity("Parser1.Models.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("Parser1.Models.Scientist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Degree")
                        .HasColumnType("text");

                    b.Property<int>("DirectionId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("integer");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DirectionId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Scientists");
                });

            modelBuilder.Entity("Parser1.Models.ScientistSubdirection", b =>
                {
                    b.Property<int>("ScientistId")
                        .HasColumnType("integer");

                    b.Property<int?>("SubdirectionId")
                        .HasColumnType("integer");

                    b.HasKey("ScientistId", "SubdirectionId");

                    b.HasIndex("SubdirectionId");

                    b.ToTable("ScientistSubdirections");
                });

            modelBuilder.Entity("Parser1.Models.ScientistWork", b =>
                {
                    b.Property<int>("ScientistId")
                        .HasColumnType("integer");

                    b.Property<int>("WorkId")
                        .HasColumnType("integer");

                    b.HasKey("ScientistId", "WorkId");

                    b.HasIndex("WorkId");

                    b.ToTable("ScientistsWork");
                });

            modelBuilder.Entity("Parser1.Models.SocialNetworkOfScientist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ScientistId")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ScientistId");

                    b.ToTable("SocialNetworkOfScientists");
                });

            modelBuilder.Entity("Parser1.Models.Subdirection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DirectionId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DirectionId");

                    b.ToTable("Subdirections");
                });

            modelBuilder.Entity("Parser1.Models.Work", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("Parser1.Models.Scientist", b =>
                {
                    b.HasOne("Parser1.Models.Direction", "Direction")
                        .WithMany()
                        .HasForeignKey("DirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parser1.Models.Organization", "Organization")
                        .WithMany("Scientists")
                        .HasForeignKey("OrganizationId");

                    b.Navigation("Direction");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Parser1.Models.ScientistSubdirection", b =>
                {
                    b.HasOne("Parser1.Models.Scientist", "Scientist")
                        .WithMany("ScientistSubdirections")
                        .HasForeignKey("ScientistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parser1.Models.Subdirection", "Subdirection")
                        .WithMany("ScientistSubdirections")
                        .HasForeignKey("SubdirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scientist");

                    b.Navigation("Subdirection");
                });

            modelBuilder.Entity("Parser1.Models.ScientistWork", b =>
                {
                    b.HasOne("Parser1.Models.Scientist", "Scientist")
                        .WithMany("ScientistsWorks")
                        .HasForeignKey("ScientistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parser1.Models.Work", "Work")
                        .WithMany("ScientistsWorks")
                        .HasForeignKey("WorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scientist");

                    b.Navigation("Work");
                });

            modelBuilder.Entity("Parser1.Models.SocialNetworkOfScientist", b =>
                {
                    b.HasOne("Parser1.Models.Scientist", "Scientist")
                        .WithMany("NetworkOfScientists")
                        .HasForeignKey("ScientistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scientist");
                });

            modelBuilder.Entity("Parser1.Models.Subdirection", b =>
                {
                    b.HasOne("Parser1.Models.Direction", "Direction")
                        .WithMany("Subdirections")
                        .HasForeignKey("DirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Direction");
                });

            modelBuilder.Entity("Parser1.Models.Direction", b =>
                {
                    b.Navigation("Subdirections");
                });

            modelBuilder.Entity("Parser1.Models.Organization", b =>
                {
                    b.Navigation("Scientists");
                });

            modelBuilder.Entity("Parser1.Models.Scientist", b =>
                {
                    b.Navigation("NetworkOfScientists");

                    b.Navigation("ScientistSubdirections");

                    b.Navigation("ScientistsWorks");
                });

            modelBuilder.Entity("Parser1.Models.Subdirection", b =>
                {
                    b.Navigation("ScientistSubdirections");
                });

            modelBuilder.Entity("Parser1.Models.Work", b =>
                {
                    b.Navigation("ScientistsWorks");
                });
#pragma warning restore 612, 618
        }
    }
}
